{"ast":null,"code":"import Numeral from 'numeral';\nexport const getNativeName = country => {\n  let nativeName = '';\n\n  if (Object.keys(country.name.nativeName).length > 1) {\n    let key = Object.keys(country.name.nativeName);\n    nativeName = country.name.nativeName[key[0]].common;\n  } else if (Object.keys(country.name.nativeName).length === 1) {\n    let key = Object.keys(country.name.nativeName);\n    nativeName = country.name.nativeName[key].common;\n  } else {\n    nativeName = 'Not Found';\n  }\n\n  return nativeName;\n};\nexport const getPopulation = country => {\n  return Numeral(country.population).format(0, 0);\n};\nexport const getCapital = country => {\n  let capitalName = '';\n\n  if (country.capital) {\n    capitalName = country.capital.length ? country.capital[0] : 'Not Found';\n  } else {\n    capitalName = 'Not Found';\n  }\n\n  return capitalName;\n};\nexport const getTopDomain = country => {\n  var _country$tld;\n\n  return ((_country$tld = country.tld) === null || _country$tld === void 0 ? void 0 : _country$tld.length) ? country.tld[0] : 'Not Found';\n};\nexport const getCurrencies = country => {\n  let currency = ' ';\n\n  if (Object.keys(country.currencies).length) {\n    let [key] = Object.keys(country.currencies);\n    currency = `${country.currencies[key].name}`;\n  } else {\n    currency = 'Not Found';\n  }\n\n  return currency;\n};\nexport const getLanguages = country => {\n  let languages = [];\n\n  for (let key in country.languages) {\n    languages.push(country.languages[key]);\n  }\n\n  return languages.toString();\n};\nexport const getCountryBorders = (countries, countryDetail) => {\n  return countries.filter(country => {\n    var _countryDetail$border;\n\n    return (_countryDetail$border = countryDetail.borders) === null || _countryDetail$border === void 0 ? void 0 : _countryDetail$border.includes(country.cca3);\n  });\n};","map":{"version":3,"sources":["/Users/aniketbhavsar/Desktop/Code Challenage/MAYD/search-you-country/src/components/Country Details/utils.js"],"names":["Numeral","getNativeName","country","nativeName","Object","keys","name","length","key","common","getPopulation","population","format","getCapital","capitalName","capital","getTopDomain","tld","getCurrencies","currency","currencies","getLanguages","languages","push","toString","getCountryBorders","countries","countryDetail","filter","borders","includes","cca3"],"mappings":"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","sourcesContent":["import Numeral from 'numeral';\n\nexport const getNativeName = (country) => {\n  let nativeName = '';\n  if (Object.keys(country.name.nativeName).length > 1) {\n    let key = Object.keys(country.name.nativeName);\n    nativeName = country.name.nativeName[key[0]].common;\n  } else if (Object.keys(country.name.nativeName).length === 1) {\n    let key = Object.keys(country.name.nativeName);\n    nativeName = country.name.nativeName[key].common;\n  } else {\n    nativeName = 'Not Found';\n  }\n  return nativeName;\n};\n\nexport const getPopulation = (country) => {\n  return Numeral(country.population).format(0, 0);\n};\n\nexport const getCapital = (country) => {\n  let capitalName = '';\n  if (country.capital) {\n    capitalName = country.capital.length ? country.capital[0] : 'Not Found';\n  } else {\n    capitalName = 'Not Found';\n  }\n  return capitalName;\n};\n\nexport const getTopDomain = (country) => {\n  return country.tld?.length ? country.tld[0] : 'Not Found';\n};\n\nexport const getCurrencies = (country) => {\n  let currency = ' ';\n  if (Object.keys(country.currencies).length) {\n    let [key] = Object.keys(country.currencies);\n    currency = `${country.currencies[key].name}`;\n  } else {\n    currency = 'Not Found';\n  }\n  return currency;\n};\n\nexport const getLanguages = (country) => {\n  let languages = [];\n  for (let key in country.languages) {\n    languages.push(country.languages[key]);\n  }\n  return languages.toString();\n};\n\nexport const getCountryBorders = (countries, countryDetail) => {\n  return countries.filter((country) => {\n    return countryDetail.borders?.includes(country.cca3);\n  });\n};\n"]},"metadata":{},"sourceType":"module"}