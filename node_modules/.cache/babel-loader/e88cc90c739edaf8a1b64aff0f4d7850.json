{"ast":null,"code":"var _jsxFileName = \"/Users/aniketbhavsar/Desktop/Code Challenage/MAYD/search-you-country/src/components/Countries Board/Countries Cards List/Pagination/Pagination.js\";\nimport React from 'react';\nimport { INCREMENT, DECREMENT } from '../../../../constant';\nimport './Pagination.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst handleScrollBar = scrollTo => {\n  scrollTo.current.scrollIntoView({\n    behavior: 'smooth'\n  });\n};\n\nconst onSetCurrentPage = (setCurrentPage, currentPage, pageNumberStatus, scrollTo) => {\n  switch (pageNumberStatus) {\n    case INCREMENT:\n      {\n        handleScrollBar(scrollTo);\n        setCurrentPage(currentPage + 1);\n        break;\n      }\n\n    case DECREMENT:\n      {\n        handleScrollBar(scrollTo);\n        setCurrentPage(currentPage - 1);\n        break;\n      }\n\n    default:\n      break;\n  }\n};\n/**\n *  Create Pagination for first and last page\n */\n\n\nconst firstNLastPage = (currentPage, totalPages, setCurrentPage, srcollTo) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: currentPage + 1 === totalPages ? () => {\n        setCurrentPage(0);\n        handleScrollBar(srcollTo);\n      } : undefined,\n      children: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"elipsis\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-ellipsis-h\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: currentPage + 1 === totalPages ? 'isActive' : undefined,\n      onClick: currentPage + 1 === 1 ? () => {\n        setCurrentPage(totalPages - 1);\n        handleScrollBar(srcollTo);\n      } : undefined,\n      children: totalPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n/**\n *  Create Pagination for second and secondLast\n */\n\n\nconst secondNSecondLastPage = (currentPage, totalPages, setCurrentPage, scrollTo) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setCurrentPage(0);\n        handleScrollBar(scrollTo);\n      },\n      children: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), currentPage + 1 === 2 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"isActive\",\n        children: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"elipsis\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-ellipsis-h\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"elipsis\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-ellipsis-h\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"isActive\",\n        children: totalPages - 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setCurrentPage(totalPages - 1);\n        handleScrollBar(scrollTo);\n      },\n      children: totalPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nconst middleSectionPagination = (currentPage, totalPages, setCurrentPage, scrollTo) => {\n  totalPages === 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"isActive\",\n    children: \"1\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 23\n  }, this);\n\n  switch (currentPage + 1) {\n    case 1:\n    case totalPages:\n      {\n        return firstNLastPage(currentPage, totalPages, setCurrentPage, scrollTo);\n      }\n\n    case 2:\n    case totalPages - 1:\n      {\n        return secondNSecondLastPage(currentPage, totalPages, setCurrentPage, scrollTo);\n      }\n\n    default:\n      {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setCurrentPage(0);\n              handleScrollBar(scrollTo);\n            },\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"elipsis\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-ellipsis-h\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"isActive\",\n            children: currentPage + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"elipsis\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-ellipsis-h\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setCurrentPage(totalPages - 1);\n              handleScrollBar(scrollTo);\n            },\n            children: totalPages\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true);\n      }\n  }\n};\n\nconst Pagination = _ref => {\n  let {\n    darkMode,\n    currentPage,\n    setCurrentPage,\n    totalPages,\n    scrollTo\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `pagination ${darkMode ? `dark ` : `light `}`,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        onSetCurrentPage(setCurrentPage, currentPage, DECREMENT, scrollTo);\n      },\n      disabled: currentPage === 0,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-arrow-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), middleSectionPagination(currentPage, totalPages, setCurrentPage, scrollTo), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nextPage\",\n      onClick: () => {\n        onSetCurrentPage(setCurrentPage, currentPage, INCREMENT, scrollTo);\n      },\n      disabled: currentPage + 1 === totalPages,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-arrow-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/Users/aniketbhavsar/Desktop/Code Challenage/MAYD/search-you-country/src/components/Countries Board/Countries Cards List/Pagination/Pagination.js"],"names":["React","INCREMENT","DECREMENT","handleScrollBar","scrollTo","current","scrollIntoView","behavior","onSetCurrentPage","setCurrentPage","currentPage","pageNumberStatus","firstNLastPage","totalPages","srcollTo","undefined","secondNSecondLastPage","middleSectionPagination","Pagination","darkMode"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { INCREMENT, DECREMENT } from '../../../../constant';\nimport './Pagination.scss';\n\nconst handleScrollBar = (scrollTo) => {\n  scrollTo.current.scrollIntoView({ behavior: 'smooth' });\n};\n\nconst onSetCurrentPage = (\n  setCurrentPage,\n  currentPage,\n  pageNumberStatus,\n  scrollTo\n) => {\n  switch (pageNumberStatus) {\n    case INCREMENT: {\n      handleScrollBar(scrollTo);\n      setCurrentPage(currentPage + 1);\n      break;\n    }\n    case DECREMENT: {\n      handleScrollBar(scrollTo);\n      setCurrentPage(currentPage - 1);\n      break;\n    }\n    default:\n      break;\n  }\n};\n\n/**\n *  Create Pagination for first and last page\n */\n\nconst firstNLastPage = (currentPage, totalPages, setCurrentPage, srcollTo) => {\n  return (\n    <>\n      <button\n        onClick={\n          currentPage + 1 === totalPages\n            ? () => {\n                setCurrentPage(0);\n                handleScrollBar(srcollTo);\n              }\n            : undefined\n        }\n      >\n        1\n      </button>\n\n      <button className='elipsis'>\n        <i className='fas fa-ellipsis-h'></i>\n      </button>\n      <button\n        className={currentPage + 1 === totalPages ? 'isActive' : undefined}\n        onClick={\n          currentPage + 1 === 1\n            ? () => {\n                setCurrentPage(totalPages - 1);\n                handleScrollBar(srcollTo);\n              }\n            : undefined\n        }\n      >\n        {totalPages}\n      </button>\n    </>\n  );\n};\n\n/**\n *  Create Pagination for second and secondLast\n */\n\nconst secondNSecondLastPage = (\n  currentPage,\n  totalPages,\n  setCurrentPage,\n  scrollTo\n) => {\n  return (\n    <>\n      <button\n        onClick={() => {\n          setCurrentPage(0);\n          handleScrollBar(scrollTo);\n        }}\n      >\n        1\n      </button>\n      {currentPage + 1 === 2 ? (\n        <>\n          <button className='isActive'>2</button>\n          <button className='elipsis'>\n            <i className='fas fa-ellipsis-h'></i>\n          </button>\n        </>\n      ) : (\n        <>\n          <button className='elipsis'>\n            <i className='fas fa-ellipsis-h'></i>\n          </button>\n          <button className='isActive'>{totalPages - 1}</button>\n        </>\n      )}\n      <button\n        onClick={() => {\n          setCurrentPage(totalPages - 1);\n          handleScrollBar(scrollTo);\n        }}\n      >\n        {totalPages}\n      </button>\n    </>\n  );\n};\n\nconst middleSectionPagination = (\n  currentPage,\n  totalPages,\n  setCurrentPage,\n  scrollTo\n) => {\n  totalPages === 1 && <button className='isActive'>1</button>;\n\n  switch (currentPage + 1) {\n    case 1:\n    case totalPages: {\n      return firstNLastPage(currentPage, totalPages, setCurrentPage, scrollTo);\n    }\n    case 2:\n    case totalPages - 1: {\n      return secondNSecondLastPage(\n        currentPage,\n        totalPages,\n        setCurrentPage,\n        scrollTo\n      );\n    }\n    default: {\n      return (\n        <>\n          <button\n            onClick={() => {\n              setCurrentPage(0);\n              handleScrollBar(scrollTo);\n            }}\n          >\n            1\n          </button>\n          <button className='elipsis'>\n            <i className='fas fa-ellipsis-h'></i>\n          </button>\n          <button className='isActive'>{currentPage + 1}</button>\n          <button className='elipsis'>\n            <i className='fas fa-ellipsis-h'></i>\n          </button>\n          <button\n            onClick={() => {\n              setCurrentPage(totalPages - 1);\n              handleScrollBar(scrollTo);\n            }}\n          >\n            {totalPages}\n          </button>\n        </>\n      );\n    }\n  }\n};\n\nconst Pagination = ({\n  darkMode,\n  currentPage,\n  setCurrentPage,\n  totalPages,\n  scrollTo,\n}) => {\n  return (\n    <div className={`pagination ${darkMode ? `dark ` : `light `}`}>\n      <button\n        onClick={() => {\n          onSetCurrentPage(setCurrentPage, currentPage, DECREMENT, scrollTo);\n        }}\n        disabled={currentPage === 0}\n      >\n        <i className='fas fa-arrow-left'></i>\n      </button>\n\n      {middleSectionPagination(\n        currentPage,\n        totalPages,\n        setCurrentPage,\n        scrollTo\n      )}\n\n      <button\n        className='nextPage'\n        onClick={() => {\n          onSetCurrentPage(setCurrentPage, currentPage, INCREMENT, scrollTo);\n        }}\n        disabled={currentPage + 1 === totalPages}\n      >\n        <i className='fas fa-arrow-left'></i>\n      </button>\n    </div>\n  );\n};\n\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}