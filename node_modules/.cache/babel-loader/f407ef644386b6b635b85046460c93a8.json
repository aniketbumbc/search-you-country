{"ast":null,"code":"var _jsxFileName = \"/Users/aniketbhavsar/Desktop/Code Challenage/MAYD/search-you-country/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useFetch } from '../hooks/useFetch';\nimport { Route, Routes, Navigate } from 'react-router-dom';\nimport { homePage } from '../constant';\nimport CountryContext from '../context/CountryContext';\nimport CountriesBoard from './Countries Board/CountriesBoard';\nimport CountryDetails from './Country Details/CountryDetails';\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [darkMode, setDarkMode] = useState(true);\n  const {\n    countries,\n    loading,\n    error\n  } = useFetch();\n  /**\n   *  Method reverse mode to dark to light based on current mode.\n   */\n\n  const toggleMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(CountriesBoard, {\n          toggleMode: toggleMode,\n          darkMode: darkMode,\n          homePage: homePage,\n          countries: countries,\n          loading: loading,\n          error: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/countryDetails/:countryName\",\n        element: /*#__PURE__*/_jsxDEV(CountryContext.Provider, {\n          value: {\n            countries\n          },\n          children: /*#__PURE__*/_jsxDEV(CountryDetails, {\n            toggleMode: toggleMode,\n            darkMode: darkMode,\n            homePage: homePage,\n            loading: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: homePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"FGvV2m3skA19AshDZO0GeGXwSsQ=\", false, function () {\n  return [useFetch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/aniketbhavsar/Desktop/Code Challenage/MAYD/search-you-country/src/components/App.js"],"names":["useState","useFetch","Route","Routes","Navigate","homePage","CountryContext","CountriesBoard","CountryDetails","App","darkMode","setDarkMode","countries","loading","error","toggleMode"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAO,YAAP;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM;AAAEY,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA;AAAtB,MAAgCb,QAAQ,EAA9C;AAEA;AACF;AACA;;AAEE,QAAMc,UAAU,GAAG,MAAM;AACvBJ,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAFD;;AAIA,sBACE;AAAA,2BAEI,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAC,GAFP;AAGE,QAAA,OAAO,eACL,QAAC,cAAD;AACE,UAAA,UAAU,EAAEK,UADd;AAEE,UAAA,QAAQ,EAAEL,QAFZ;AAGE,UAAA,QAAQ,EAAEL,QAHZ;AAIE,UAAA,SAAS,EAAEO,SAJb;AAKE,UAAA,OAAO,EAAEC,OALX;AAME,UAAA,KAAK,EAAEC;AANT;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cADF,eAeE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,8BADP;AAEE,QAAA,OAAO,eACL,QAAC,cAAD,CAAgB,QAAhB;AAAyB,UAAA,KAAK,EAAE;AAAEF,YAAAA;AAAF,WAAhC;AAAA,iCACE,QAAC,cAAD;AACE,YAAA,UAAU,EAAEG,UADd;AAEE,YAAA,QAAQ,EAAEL,QAFZ;AAGE,YAAA,QAAQ,EAAEL,QAHZ;AAIE,YAAA,OAAO,EAAEQ;AAJX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cAfF,eA4BE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,OAAO,eAAE,QAAC,QAAD;AAAU,UAAA,EAAE,EAAER;AAAd;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,cA5BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADF;AAoCD,CAhDD;;GAAMI,G;UAEkCR,Q;;;KAFlCQ,G;AAkDN,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\nimport { useFetch } from '../hooks/useFetch';\nimport { Route, Routes, Navigate } from 'react-router-dom';\nimport { homePage } from '../constant';\nimport CountryContext from '../context/CountryContext';\nimport CountriesBoard from './Countries Board/CountriesBoard';\nimport CountryDetails from './Country Details/CountryDetails';\nimport './App.scss';\n\nconst App = () => {\n  const [darkMode, setDarkMode] = useState(true);\n  const { countries, loading, error } = useFetch();\n\n  /**\n   *  Method reverse mode to dark to light based on current mode.\n   */\n\n  const toggleMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <>\n      {\n        <Routes>\n          <Route\n            exact\n            path='/'\n            element={\n              <CountriesBoard\n                toggleMode={toggleMode}\n                darkMode={darkMode}\n                homePage={homePage}\n                countries={countries}\n                loading={loading}\n                error={error}\n              />\n            }\n          />\n          <Route\n            path='/countryDetails/:countryName'\n            element={\n              <CountryContext.Provider value={{ countries }}>\n                <CountryDetails\n                  toggleMode={toggleMode}\n                  darkMode={darkMode}\n                  homePage={homePage}\n                  loading={loading}\n                />\n              </CountryContext.Provider>\n            }\n          />\n          <Route path='*' element={<Navigate to={homePage} />} />\n        </Routes>\n      }\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}