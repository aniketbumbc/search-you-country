{"ast":null,"code":"var _jsxFileName = \"/Users/aniketbhavsar/Desktop/Code Challenage/MAYD/search-you-country/src/components/Countries Board/Countries Cards List/CountryCardList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Card from './Card/Card';\nimport Loader from '../../Loader/Loader';\nimport Pagination from './Pagination/Pagination';\nimport './CountryCardList.scss';\nimport NotFound from '../../NotFound/NotFound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst setCountryCards = (filteredCountries, currentPage, darkMode) => {\n  return filteredCountries.slice(currentPage * 8, currentPage * 8 + 8).map(country => /*#__PURE__*/_jsxDEV(Card, { ...country,\n    darkMode: darkMode\n  }, country.name.common, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this));\n};\n\nconst CountryCardList = _ref => {\n  _s();\n\n  let {\n    filteredCountries,\n    darkMode,\n    countries,\n    scrollTo,\n    loading,\n    error\n  } = _ref;\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(1);\n  useEffect(() => {\n    let tempTotalpages = filteredCountries.length > 8 ? Math.ceil(filteredCountries.length / 8) : 1;\n    setTotalPages(tempTotalpages);\n  }, [filteredCountries]);\n  useEffect(() => {\n    setCurrentPage(0);\n  }, [filteredCountries]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(NotFound, {\n      error: error,\n      darkMode: darkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"countryList\",\n      children: !!countries.length ? filteredCountries.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: setCountryCards(filteredCountries, currentPage, darkMode)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          currentPage: currentPage,\n          darkMode: darkMode,\n          scrollTo: scrollTo,\n          setCurrentPage: setCurrentPage,\n          totalPages: totalPages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"showError\",\n        children: [\"Ooops!!! You Enter Wrong Text\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), \"Try Something New\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this) : loading && /*#__PURE__*/_jsxDEV(Loader, {\n        loading: loading,\n        darkMode: darkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CountryCardList, \"n/DEOHJ4knFDls/PvRPlA4JRVGg=\");\n\n_c = CountryCardList;\nexport default CountryCardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryCardList\");","map":{"version":3,"sources":["/Users/aniketbhavsar/Desktop/Code Challenage/MAYD/search-you-country/src/components/Countries Board/Countries Cards List/CountryCardList.js"],"names":["useState","useEffect","Card","Loader","Pagination","NotFound","setCountryCards","filteredCountries","currentPage","darkMode","slice","map","country","name","common","CountryCardList","countries","scrollTo","loading","error","setCurrentPage","totalPages","setTotalPages","tempTotalpages","length","Math","ceil"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,wBAAP;AACA,OAAOC,QAAP,MAAqB,yBAArB;;;;AAEA,MAAMC,eAAe,GAAG,CAACC,iBAAD,EAAoBC,WAApB,EAAiCC,QAAjC,KAA8C;AACpE,SAAOF,iBAAiB,CACrBG,KADI,CACEF,WAAW,GAAG,CADhB,EACmBA,WAAW,GAAG,CAAd,GAAkB,CADrC,EAEJG,GAFI,CAECC,OAAD,iBACH,QAAC,IAAD,OAAoCA,OAApC;AAA6C,IAAA,QAAQ,EAAEH;AAAvD,KAAWG,OAAO,CAACC,IAAR,CAAaC,MAAxB;AAAA;AAAA;AAAA;AAAA,UAHG,CAAP;AAKD,CAND;;AAQA,MAAMC,eAAe,GAAG,QAOlB;AAAA;;AAAA,MAPmB;AACvBR,IAAAA,iBADuB;AAEvBE,IAAAA,QAFuB;AAGvBO,IAAAA,SAHuB;AAIvBC,IAAAA,QAJuB;AAKvBC,IAAAA,OALuB;AAMvBC,IAAAA;AANuB,GAOnB;AACJ,QAAM,CAACX,WAAD,EAAcY,cAAd,IAAgCpB,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACqB,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC,CAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIsB,cAAc,GAChBhB,iBAAiB,CAACiB,MAAlB,GAA2B,CAA3B,GACIC,IAAI,CAACC,IAAL,CAAUnB,iBAAiB,CAACiB,MAAlB,GAA2B,CAArC,CADJ,GAEI,CAHN;AAIAF,IAAAA,aAAa,CAACC,cAAD,CAAb;AACD,GANQ,EAMN,CAAChB,iBAAD,CANM,CAAT;AAQAN,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,cAAc,CAAC,CAAD,CAAd;AACD,GAFQ,EAEN,CAACb,iBAAD,CAFM,CAAT;AAIA,sBACE;AAAA,eACGY,KAAK,iBAAI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEA,KAAjB;AAAwB,MAAA,QAAQ,EAAEV;AAAlC;AAAA;AAAA;AAAA;AAAA,YADZ,eAGE;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAA,gBACG,CAAC,CAACO,SAAS,CAACQ,MAAZ,GACCjB,iBAAiB,CAACiB,MAAlB,KAA6B,CAA7B,gBACE;AAAA,gCACE;AAAA,oBACGlB,eAAe,CAACC,iBAAD,EAAoBC,WAApB,EAAiCC,QAAjC;AADlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,UAAD;AACE,UAAA,WAAW,EAAED,WADf;AAEE,UAAA,QAAQ,EAAEC,QAFZ;AAGE,UAAA,QAAQ,EAAEQ,QAHZ;AAIE,UAAA,cAAc,EAAEG,cAJlB;AAKE,UAAA,UAAU,EAAEC;AALd;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA,sBADF,gBAcE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,iEAEE;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfH,GAsBCH,OAAO,iBAAI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEA,OAAjB;AAA0B,QAAA,QAAQ,EAAET;AAApC;AAAA;AAAA;AAAA;AAAA;AAvBf;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAgCD,CAvDD;;GAAMM,e;;KAAAA,e;AAyDN,eAAeA,eAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport Card from './Card/Card';\nimport Loader from '../../Loader/Loader';\nimport Pagination from './Pagination/Pagination';\nimport './CountryCardList.scss';\nimport NotFound from '../../NotFound/NotFound';\n\nconst setCountryCards = (filteredCountries, currentPage, darkMode) => {\n  return filteredCountries\n    .slice(currentPage * 8, currentPage * 8 + 8)\n    .map((country) => (\n      <Card key={country.name.common} {...country} darkMode={darkMode} />\n    ));\n};\n\nconst CountryCardList = ({\n  filteredCountries,\n  darkMode,\n  countries,\n  scrollTo,\n  loading,\n  error,\n}) => {\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(1);\n\n  useEffect(() => {\n    let tempTotalpages =\n      filteredCountries.length > 8\n        ? Math.ceil(filteredCountries.length / 8)\n        : 1;\n    setTotalPages(tempTotalpages);\n  }, [filteredCountries]);\n\n  useEffect(() => {\n    setCurrentPage(0);\n  }, [filteredCountries]);\n\n  return (\n    <>\n      {error && <NotFound error={error} darkMode={darkMode} />}\n\n      <section className='countryList'>\n        {!!countries.length ? (\n          filteredCountries.length !== 0 ? (\n            <>\n              <div>\n                {setCountryCards(filteredCountries, currentPage, darkMode)}\n              </div>\n              <Pagination\n                currentPage={currentPage}\n                darkMode={darkMode}\n                scrollTo={scrollTo}\n                setCurrentPage={setCurrentPage}\n                totalPages={totalPages}\n              />\n            </>\n          ) : (\n            <p className='showError'>\n              Ooops!!! You Enter Wrong Text\n              <br />\n              Try Something New\n            </p>\n          )\n        ) : (\n          loading && <Loader loading={loading} darkMode={darkMode} />\n        )}\n      </section>\n    </>\n  );\n};\n\nexport default CountryCardList;\n"]},"metadata":{},"sourceType":"module"}