{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { REST_COUNTRIES_URL } from '../constant';\nexport const useFetch = () => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n\n      try {\n        const response = await fetch(REST_COUNTRIES_URL, {\n          method: 'GET'\n        });\n\n        if (response.ok) {\n          setLoading(false);\n          response.json().then(data => {\n            setCountries(data);\n          });\n        } else {\n          throw new Error('Something went wrong' + response.status);\n        }\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return {\n    countries,\n    loading,\n    error\n  };\n};\n\n_s(useFetch, \"TiBgVUGbrhg1kW7jYtikSCZA70g=\");","map":{"version":3,"sources":["/Users/aniketbhavsar/Desktop/Code Challenage/MAYD/search-you-country/src/hooks/useFetch.js"],"names":["useEffect","useState","REST_COUNTRIES_URL","useFetch","countries","setCountries","loading","setLoading","error","setError","fetchData","response","fetch","method","ok","json","then","data","Error","status","message"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,kBAAT,QAAmC,aAAnC;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,SAAS,GAAG,YAAY;AAC5BH,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAI;AACF,cAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACV,kBAAD,EAAqB;AAC/CW,UAAAA,MAAM,EAAE;AADuC,SAArB,CAA5B;;AAIA,YAAIF,QAAQ,CAACG,EAAb,EAAiB;AACfP,UAAAA,UAAU,CAAC,KAAD,CAAV;AACAI,UAAAA,QAAQ,CAACI,IAAT,GAAgBC,IAAhB,CAAsBC,IAAD,IAAU;AAC7BZ,YAAAA,YAAY,CAACY,IAAD,CAAZ;AACD,WAFD;AAGD,SALD,MAKO;AACL,gBAAM,IAAIC,KAAJ,CAAU,yBAAyBP,QAAQ,CAACQ,MAA5C,CAAN;AACD;AACF,OAbD,CAaE,OAAOX,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAACD,KAAK,CAACY,OAAP,CAAR;AACAb,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAnBD;;AAqBAG,IAAAA,SAAS;AACV,GAvBQ,EAuBN,EAvBM,CAAT;AAyBA,SAAO;AAAEN,IAAAA,SAAF;AAAaE,IAAAA,OAAb;AAAsBE,IAAAA;AAAtB,GAAP;AACD,CA/BM;;GAAML,Q","sourcesContent":["import { useEffect, useState } from 'react';\nimport { REST_COUNTRIES_URL } from '../constant';\n\nexport const useFetch = () => {\n  const [countries, setCountries] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(REST_COUNTRIES_URL, {\n          method: 'GET',\n        });\n\n        if (response.ok) {\n          setLoading(false);\n          response.json().then((data) => {\n            setCountries(data);\n          });\n        } else {\n          throw new Error('Something went wrong' + response.status);\n        }\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return { countries, loading, error };\n};\n"]},"metadata":{},"sourceType":"module"}